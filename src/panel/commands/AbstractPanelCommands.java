/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panel.commands;

import command.game.AbstractGameCommand;
import command.game.factory.GameCommandFactory;
import constants.GameCommandsConstant;
import javax.swing.JPanel;
import visitor.panel.PanelElement;
import visitor.panel.PanelVisitor;

/**
 *
 * @author siux
 */
public abstract class AbstractPanelCommands extends javax.swing.JPanel implements PanelElement{

    
    private AbstractGameCommand gameCommand;
    /**
     * Creates new form AbstractPanelCommands
     */
    public AbstractPanelCommands() {
        initComponents();
        prepareView();
    }
    
    public abstract void refreshView();

    
    @Override
    public void accept(PanelVisitor panelVisitor) {
        panelVisitor.visit(this);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMandatoryCommands = new javax.swing.JPanel();
        pnlExtendedCommands = new javax.swing.JPanel();

        javax.swing.GroupLayout pnlMandatoryCommandsLayout = new javax.swing.GroupLayout(pnlMandatoryCommands);
        pnlMandatoryCommands.setLayout(pnlMandatoryCommandsLayout);
        pnlMandatoryCommandsLayout.setHorizontalGroup(
            pnlMandatoryCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pnlMandatoryCommandsLayout.setVerticalGroup(
            pnlMandatoryCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlExtendedCommandsLayout = new javax.swing.GroupLayout(pnlExtendedCommands);
        pnlExtendedCommands.setLayout(pnlExtendedCommandsLayout);
        pnlExtendedCommandsLayout.setHorizontalGroup(
            pnlExtendedCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pnlExtendedCommandsLayout.setVerticalGroup(
            pnlExtendedCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlExtendedCommands;
    private javax.swing.JPanel pnlMandatoryCommands;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        pnlMandatoryCommands = makePanelMandatoryCommands();
        pnlExtendedCommands = makePanelExtendedCommands();
        
        add(pnlMandatoryCommands);
        add(pnlExtendedCommands);
    }

    protected abstract JPanel makePanelMandatoryCommands();

    protected abstract JPanel makePanelExtendedCommands();
    
    public void makeCommand(GameCommandsConstant gameCommandsConstant){
        gameCommand = GameCommandFactory.createGameCommand(gameCommandsConstant);
    }
    
    public void invokeCommand() throws Exception{
        if(gameCommand == null){
            throw new Exception("Game command is null!");
        }
        gameCommand.execute();
    }
}
